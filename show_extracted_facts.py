#!/usr/bin/env python
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã—Ö —Ñ–∞–∫—Ç–æ–≤ –∏–∑ –¥–∏–∞–ª–æ–≥–æ–≤
"""
import json
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(str(Path(__file__).parent / "src"))

def load_leaderboard_data(file_path: str):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞ –∏–∑ JSONL —Ñ–∞–π–ª–∞"""
    dialogues = []
    
    with open(file_path, 'r', encoding='utf-8') as f:
        for line_num, line in enumerate(f, 1):
            if line.strip():
                try:
                    dialogue = json.loads(line)
                    dialogues.append(dialogue)
                except json.JSONDecodeError as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å—Ç—Ä–æ–∫–∏ {line_num}: {e}")
    
    return dialogues

def extract_facts_from_dialogue(dialogue):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ñ–∞–∫—Ç—ã –∏–∑ –¥–∏–∞–ª–æ–≥–∞"""
    facts = []
    
    for session in dialogue.get('sessions', []):
        session_id = session.get('id', 'unknown')
        
        for msg in session.get('messages', []):
            if msg.get('role') == 'user':
                content = msg.get('content', '').lower()
                
                # –§–∞–∫—Ç—ã –æ —Å–æ–±–∞–∫–µ
                if any(word in content for word in ['—Å–æ–±–∞–∫–∞', '–ø–µ—Å', '–ø—ë—Å', '—Å–æ–±–∞—á–∫—É']):
                    fact_info = {
                        'type': 'dog',
                        'content': msg.get('content', ''),
                        'session_id': session_id,
                        'message_id': f"session_{session_id}_msg_{len(facts)}"
                    }
                    facts.append(fact_info)
                
                # –§–∞–∫—Ç—ã –æ —Å–ø–æ—Ä—Ç–µ
                elif any(word in content for word in ['—Å–ø–æ—Ä—Ç', '—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞', '–±–µ–≥', '–ø–ª–∞–≤–∞–Ω–∏–µ', '—Ñ—É—Ç–±–æ–ª', '—Ç–µ–Ω–Ω–∏—Å']):
                    fact_info = {
                        'type': 'sport',
                        'content': msg.get('content', ''),
                        'session_id': session_id,
                        'message_id': f"session_{session_id}_msg_{len(facts)}"
                    }
                    facts.append(fact_info)
                
                # –§–∞–∫—Ç—ã –æ —Ä–∞–±–æ—Ç–µ
                elif any(word in content for word in ['—Ä–∞–±–æ—Ç–∞', '–ø—Ä–æ—Ñ–µ—Å—Å–∏—è', '–¥–æ–ª–∂–Ω–æ—Å—Ç—å', '–∫–æ–º–ø–∞–Ω–∏—è', '–æ—Ñ–∏—Å']):
                    fact_info = {
                        'type': 'work',
                        'content': msg.get('content', ''),
                        'session_id': session_id,
                        'message_id': f"session_{session_id}_msg_{len(facts)}"
                    }
                    facts.append(fact_info)
                
                # –§–∞–∫—Ç—ã –æ –∫—É—Ä–µ–Ω–∏–∏
                elif any(word in content for word in ['—Å–∏–≥–∞—Ä–µ—Ç—ã', '–∫—É—Ä—é', '–∫—É—Ä–∏—Ç—å', '—Ç–∞–±–∞–∫', '–Ω–∏–∫–æ—Ç–∏–Ω']):
                    fact_info = {
                        'type': 'smoking',
                        'content': msg.get('content', ''),
                        'session_id': session_id,
                        'message_id': f"session_{session_id}_msg_{len(facts)}"
                    }
                    facts.append(fact_info)
                
                # –û–±—â–∏–µ –ª–∏—á–Ω—ã–µ —Ñ–∞–∫—Ç—ã
                elif any(word in content for word in ['–∑–æ–≤—É—Ç', '–∂–∏–≤—É', '—Ä–æ–¥–∏–ª—Å—è', '–∂–µ–Ω–∞—Ç', '–¥–µ—Ç–∏']):
                    fact_info = {
                        'type': 'personal',
                        'content': msg.get('content', ''),
                        'session_id': session_id,
                        'message_id': f"session_{session_id}_msg_{len(facts)}"
                    }
                    facts.append(fact_info)
    
    return facts

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç –ü–û–ö–ê–ó –ò–ó–í–õ–ï–ß–ï–ù–ù–´–• –§–ê–ö–¢–û–í –ò–ó –î–ò–ê–õ–û–ì–û–í")
    print("=" * 60)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∏–∞–ª–æ–≥–∏
    dialogues = load_leaderboard_data("data/format_example.jsonl")
    
    for i, dialogue in enumerate(dialogues, 1):
        dialogue_id = dialogue.get('id', f'dialogue_{i}')
        question = dialogue.get('question', '–ù–µ—Ç –≤–æ–ø—Ä–æ—Å–∞')
        
        print(f"\nüìã –î–ò–ê–õ–û–ì {i} (ID: {dialogue_id})")
        print(f"‚ùì –í–æ–ø—Ä–æ—Å: {question}")
        print("-" * 60)
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ñ–∞–∫—Ç—ã
        facts = extract_facts_from_dialogue(dialogue)
        
        if not facts:
            print("‚ùå –§–∞–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            continue
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Ñ–∞–∫—Ç—ã –ø–æ —Ç–∏–ø–∞–º
        facts_by_type = {}
        for fact in facts:
            fact_type = fact['type']
            if fact_type not in facts_by_type:
                facts_by_type[fact_type] = []
            facts_by_type[fact_type].append(fact)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∞–∫—Ç—ã –ø–æ —Ç–∏–ø–∞–º
        for fact_type, type_facts in facts_by_type.items():
            print(f"\nüìå {fact_type.upper()} ({len(type_facts)} —Ñ–∞–∫—Ç–æ–≤):")
            
            for j, fact in enumerate(type_facts, 1):
                print(f"  {j}. –°–µ—Å—Å–∏—è {fact['session_id']}: {fact['content']}")
        
        print(f"\nüìä –í—Å–µ–≥–æ –∏–∑–≤–ª–µ—á–µ–Ω–æ —Ñ–∞–∫—Ç–æ–≤: {len(facts)}")
        print("=" * 60)

if __name__ == "__main__":
    main()
