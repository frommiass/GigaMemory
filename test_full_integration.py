#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ RAG —Å–∏—Å—Ç–µ–º—ã —Å –æ—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥–µ–ª—å—é
"""
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

# –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é –º–æ–¥–µ–ª—å Message
class Message:
    def __init__(self, role: str, content: str, session_id: str = None):
        self.role = role
        self.content = content
        self.session_id = session_id

# –ú–æ–∫–∞–µ–º models –º–æ–¥—É–ª—å
sys.modules['models'] = type('models', (), {'Message': Message})()

def test_full_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é RAG —Å–∏—Å—Ç–µ–º—ã"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ RAG —Å–∏—Å—Ç–µ–º—ã...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –º–æ–¥–µ–ª—å
        from submit.model_inference import SubmitModelWithMemory
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –º–æ–¥–µ–ª–∏ (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø—É—Ç–∏ –∫ –º–æ–¥–µ–ª–∏)
        print("\n1Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ —Å RAG —Å–∏—Å—Ç–µ–º–æ–π:")
        try:
            model = SubmitModelWithMemory("/fake/model/path")
            print("   ‚úÖ –ú–æ–¥–µ–ª—å —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            print(f"   RAG –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: {type(model.rag_interface).__name__}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–¥–µ–ª–∏: {e}")
            return
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        test_messages = [
            Message(role="user", content="–ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç –ò–≤–∞–Ω", session_id="1"),
            Message(role="assistant", content="–ü—Ä–∏–≤–µ—Ç, –ò–≤–∞–Ω! –†–∞–¥ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!"),
            Message(role="user", content="–£ –º–µ–Ω—è –µ—Å—Ç—å –∫–æ—Ç –ø–æ –∏–º–µ–Ω–∏ –ë–∞—Ä—Å–∏–∫", session_id="1"),
            Message(role="assistant", content="–ö–∞–∫ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ! –†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–≤–æ–µ–º –∫–æ—Ç–µ."),
            Message(role="user", content="–ú–æ–π –∫–æ—Ç –ª—é–±–∏—Ç –∏–≥—Ä–∞—Ç—å —Å –º—è—á–∏–∫–æ–º", session_id="2"),
            Message(role="assistant", content="–ó–≤—É—á–∏—Ç –∑–∞–±–∞–≤–Ω–æ!"),
            Message(role="user", content="–Ø —Ä–∞–±–æ—Ç–∞—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–º –≤ IT –∫–æ–º–ø–∞–Ω–∏–∏", session_id="3"),
            Message(role="assistant", content="–û—Ç–ª–∏—á–Ω–æ! –ö–∞–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å?"),
        ]
        
        dialogue_id = "test_dialogue"
        
        # –¢–µ—Å—Ç 2: –ó–∞–ø–∏—Å—å –≤ –ø–∞–º—è—Ç—å
        print("\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –ø–∞–º—è—Ç—å:")
        try:
            model.write_to_memory(test_messages, dialogue_id)
            print("   ‚úÖ –°–æ–æ–±—â–µ–Ω–∏—è –∑–∞–ø–∏—Å–∞–Ω—ã –≤ –ø–∞–º—è—Ç—å!")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–∞–º—è—Ç–∏
            memory_stats = model.storage.get_memory_stats(dialogue_id)
            print(f"   –°–æ–æ–±—â–µ–Ω–∏–π –≤ –ø–∞–º—è—Ç–∏: {memory_stats['messages_count']}")
            print(f"   –°–µ—Å—Å–∏–π: {memory_stats['sessions_count']}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ –ø–∞–º—è—Ç—å: {e}")
        
        # –¢–µ—Å—Ç 3: –ê–Ω–∞–ª–∏–∑ –≤–æ–ø—Ä–æ—Å–æ–≤
        print("\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –≤–æ–ø—Ä–æ—Å–æ–≤:")
        test_questions = [
            "–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?",
            "–ö–∞–∫–∏–µ —É –º–µ–Ω—è –∂–∏–≤–æ—Ç–Ω—ã–µ?",
            "–ì–¥–µ —è —Ä–∞–±–æ—Ç–∞—é?",
            "–ß—Ç–æ —è –¥–µ–ª–∞—é –≤ —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è?"
        ]
        
        for question in test_questions:
            try:
                analysis = model.analyze_question(dialogue_id, question)
                if 'error' not in analysis:
                    print(f"   '{question}' ‚Üí –¢–µ–º–∞: {analysis.get('topic', 'N/A')}, –°—Ç—Ä–∞—Ç–µ–≥–∏—è: {analysis.get('strategy', 'N/A')}")
                else:
                    print(f"   '{question}' ‚Üí –û—à–∏–±–∫–∞: {analysis['error']}")
            except Exception as e:
                print(f"   '{question}' ‚Üí –û—à–∏–±–∫–∞: {e}")
        
        # –¢–µ—Å—Ç 4: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤ (–±–µ–∑ LLM)
        print("\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–º–ø—Ç–æ–≤:")
        for question in test_questions[:2]:  # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 2 –≤–æ–ø—Ä–æ—Å–∞
            try:
                prompt = model.answer_to_question_mock(dialogue_id, question)
                print(f"   –í–æ–ø—Ä–æ—Å: '{question}'")
                print(f"   –ü—Ä–æ–º–ø—Ç: {prompt[:100]}...")
                print(f"   –î–ª–∏–Ω–∞ –ø—Ä–æ–º–ø—Ç–∞: {len(prompt)}")
            except Exception as e:
                print(f"   –í–æ–ø—Ä–æ—Å: '{question}' ‚Üí –û—à–∏–±–∫–∞: {e}")
        
        # –¢–µ—Å—Ç 5: RAG —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print("\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ RAG —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:")
        try:
            rag_stats = model.get_rag_stats(dialogue_id)
            if 'error' not in rag_stats:
                print(f"   –î–∏–∞–ª–æ–≥: {rag_stats['dialogue_id']}")
                print(f"   –°–æ–æ–±—â–µ–Ω–∏–π –≤ –ø–∞–º—è—Ç–∏: {rag_stats['memory_messages']}")
                print(f"   –°–µ—Å—Å–∏–π: {rag_stats['sessions_count']}")
                print(f"   –î–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–µ–º: {len(rag_stats['available_topics'])}")
                print(f"   –ü–æ—Ä–æ–≥ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏: {rag_stats['rag_config'].get('confidence_threshold', 'N/A')}")
            else:
                print(f"   –û—à–∏–±–∫–∞: {rag_stats['error']}")
        except Exception as e:
            print(f"   –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        
        # –¢–µ—Å—Ç 6: –û—á–∏—Å—Ç–∫–∞ –ø–∞–º—è—Ç–∏
        print("\n6Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—á–∏—Å—Ç–∫–∏ –ø–∞–º—è—Ç–∏:")
        try:
            model.clear_memory(dialogue_id)
            print("   ‚úÖ –ü–∞–º—è—Ç—å –æ—á–∏—â–µ–Ω–∞!")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞–º—è—Ç—å –ø—É—Å—Ç–∞
            memory_after_clear = model.storage.get_memory(dialogue_id)
            print(f"   –°–æ–æ–±—â–µ–Ω–∏–π –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏: {len(memory_after_clear)}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ø–∞–º—è—Ç–∏: {e}")
        
        print("\n‚úÖ –ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    test_full_integration()
