#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã SmartMemory
"""
import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

from models import Message
from submit.smart_memory_optimized import OptimizedSmartMemory
from submit.config_loader import config_manager
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def test_optimized_system():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É"""
    
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã SmartMemory")
    print("=" * 60)
    
    try:
        # 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã
        print("üìã –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã...")
        memory = OptimizedSmartMemory()
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # 2. –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        print("\nüìù –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
        test_messages = [
            Message(role="user", content="–ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–ª–µ–∫—Å–µ–π, —è —Ä–∞–±–æ—Ç–∞—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–º –≤ –∫–æ–º–ø–∞–Ω–∏–∏ –Ø–Ω–¥–µ–∫—Å."),
            Message(role="user", content="–£ –º–µ–Ω—è –µ—Å—Ç—å –∂–µ–Ω–∞ –ú–∞—Ä–∏—è –∏ –¥–æ—á—å –ê–Ω–Ω–∞, –∫–æ—Ç–æ—Ä–æ–π 5 –ª–µ—Ç."),
            Message(role="user", content="–Ø –∂–∏–≤—É –≤ –ú–æ—Å–∫–≤–µ, –≤ —Ä–∞–π–æ–Ω–µ –°–æ–∫–æ–ª—å–Ω–∏–∫–∏. –†–∞–±–æ—Ç–∞—é —É–¥–∞–ª–µ–Ω–Ω–æ."),
            Message(role="user", content="–ú–æ—è –∂–µ–Ω–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —É—á–∏—Ç–µ–ª–µ–º –≤ —à–∫–æ–ª–µ. –û–Ω–∞ –æ—á–µ–Ω—å –ª—é–±–∏—Ç —Å–≤–æ—é —Ä–∞–±–æ—Ç—É."),
            Message(role="user", content="–£ –Ω–∞—Å –µ—Å—Ç—å —Å–æ–±–∞–∫–∞ –ø–æ –∫–ª–∏—á–∫–µ –†–µ–∫—Å. –û–Ω –æ—á–µ–Ω—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π."),
            Message(role="user", content="–Ø —É–≤–ª–µ–∫–∞—é—Å—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π –∏ —á–∞—Å—Ç–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É—é —Å–µ–º—å—é –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö."),
            Message(role="user", content="–ù–∞—à–∞ –¥–æ—á—å —Ö–æ–¥–∏—Ç –≤ –¥–µ—Ç—Å–∫–∏–π —Å–∞–¥ –∏ –æ—á–µ–Ω—å –ª—é–±–∏—Ç —Ä–∏—Å–æ–≤–∞—Ç—å."),
            Message(role="user", content="–Ø —Ä–∞–±–æ—Ç–∞—é —Å Python –∏ –º–∞—à–∏–Ω–Ω—ã–º –æ–±—É—á–µ–Ω–∏–µ–º. –ù–µ–¥–∞–≤–Ω–æ –∏–∑—É—á–∞—é –Ω–µ–π—Ä–æ—Å–µ—Ç–∏."),
        ]
        
        dialogue_id = "test_dialogue_1"
        print(f"‚úÖ –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ {len(test_messages)} —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
        
        # 3. –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∏–∞–ª–æ–≥–∞
        print(f"\nüîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∏–∞–ª–æ–≥–∞ {dialogue_id}...")
        stats = memory.process_dialogue_optimized(dialogue_id, test_messages)
        
        print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏:")
        for key, value in stats.items():
            if isinstance(value, (int, float)):
                print(f"  {key}: {value}")
            elif isinstance(value, dict):
                print(f"  {key}:")
                for sub_key, sub_value in value.items():
                    print(f"    {sub_key}: {sub_value}")
        
        # 4. –¢–µ—Å—Ç–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã
        print(f"\n‚ùì –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤...")
        test_questions = [
            "–†–∞—Å—Å–∫–∞–∂–∏ –æ —Ä–∞–±–æ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            "–ö–∞–∫–∞—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–µ–º—å—è?",
            "–ì–¥–µ –∂–∏–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å?",
            "–ö–∞–∫–∏–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–≤–ª–µ—á–µ–Ω–∏—è?",
            "–†–∞—Å—Å–∫–∞–∂–∏ –æ –¥–æ–º–∞—à–Ω–∏—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö",
            "–ß—Ç–æ –∏–∑—É—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å?",
            "–ì–¥–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∂–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?",
            "–°–∫–æ–ª—å–∫–æ –ª–µ—Ç –¥–æ—á–µ—Ä–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?"
        ]
        
        # 5. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤
        print("\nü§ñ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤:")
        print("-" * 40)
        
        for i, question in enumerate(test_questions, 1):
            print(f"\n{i}. –í–æ–ø—Ä–æ—Å: {question}")
            try:
                answer = memory.answer_question_optimized(dialogue_id, question)
                print(f"   –û—Ç–≤–µ—Ç: {answer}")
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # 6. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã
        print(f"\nüìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã:")
        print("-" * 40)
        system_stats = memory.get_system_stats()
        
        for category, stats in system_stats.items():
            print(f"\n{category.upper()}:")
            for key, value in stats.items():
                if isinstance(value, dict):
                    print(f"  {key}:")
                    for sub_key, sub_value in value.items():
                        print(f"    {sub_key}: {sub_value}")
                else:
                    print(f"  {key}: {value}")
        
        # 7. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        print(f"\nüíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è...")
        memory.save_state("./test_state")
        print("‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ")
        
        print(f"\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

def test_config_loading():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("\n‚öôÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    try:
        config = config_manager.get_config()
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞:")
        print(f"  –ú–æ–¥–µ–ª—å: {config.model_path}")
        print(f"  Embedding –º–æ–¥–µ–ª—å: {config.embedding_config.get('model_name', 'N/A')}")
        print(f"  –°–∂–∞—Ç–∏–µ –≤–∫–ª—é—á–µ–Ω–æ: {config.compression_config.get('enabled', False)}")
        print(f"  –ö—ç—à —Ä–∞–∑–º–µ—Ä: {config.cache_config.get('max_size', 'N/A')}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")

if __name__ == "__main__":
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    test_config_loading()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É
    test_optimized_system()
