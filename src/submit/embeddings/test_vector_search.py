# üöÄ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤–µ–∫—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –≤ GigaMemory

## üì¶ –ß—Ç–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ

### 1. **EmbeddingEngine** (`src/submit/embeddings/embedding_engine.py`)
- –°–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `cointegrated/rubert-tiny2` (–ª–µ–≥–∫–∞—è —Ä—É—Å—Å–∫–∞—è –º–æ–¥–µ–ª—å)
- –ë–∞—Ç—á–µ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
- –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –ø—É–ª–∏–Ω–≥–∞ (mean, max, cls)
- –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ/–∑–∞–≥—Ä—É–∑–∫–∞ –∫—ç—à–∞ –Ω–∞ –¥–∏—Å–∫

### 2. **VectorStore** (`src/submit/embeddings/vector_store.py`)
- –•—Ä–∞–Ω–µ–Ω–∏–µ –∏ –ø–æ–∏—Å–∫ –≤–µ–∫—Ç–æ—Ä–æ–≤ —Å numpy (–Ω–µ —Ç—Ä–µ–±—É–µ—Ç FAISS)
- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
- –ö–æ—Å–∏–Ω—É—Å–Ω–æ–µ —Å—Ö–æ–¥—Å—Ç–≤–æ, –µ–≤–∫–ª–∏–¥–æ–≤–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ, dot product
- –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ/–∑–∞–≥—Ä—É–∑–∫–∞ –∏–Ω–¥–µ–∫—Å–æ–≤
- SimpleVectorStore –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∏—Ä–æ–≤–∞–Ω–∏—è

### 3. **VectorRAGEngine** (`src/submit/rag/vector_rag_engine.py`)
- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤–µ–∫—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –≤ RAG —Å–∏—Å—Ç–µ–º—É
- –ì–∏–±—Ä–∏–¥–Ω—ã–π –ø–æ–∏—Å–∫ (–≤–µ–∫—Ç–æ—Ä–Ω—ã–π + keyword)
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è –¥–∏–∞–ª–æ–≥–æ–≤
- –î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ–∏—Å–∫–∞

## üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞

### 1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª—ã –≤ –ø—Ä–æ–µ–∫—Ç:
```bash
# –°–æ–∑–¥–∞–π—Ç–µ –ø–∞–ø–∫—É –¥–ª—è —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤
mkdir -p src/submit/embeddings

# –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª—ã
cp embedding_engine.py src/submit/embeddings/
cp vector_store.py src/submit/embeddings/
cp __init__.py src/submit/embeddings/
cp vector_rag_engine.py src/submit/rag/
```

### 2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (—É–∂–µ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –≤–∞—à–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏):
- ‚úÖ torch
- ‚úÖ transformers
- ‚úÖ numpy

## üéØ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥

### –í–∞—Ä–∏–∞–Ω—Ç 1: –ü–æ–ª–Ω–∞—è –∑–∞–º–µ–Ω–∞ RAGEngine

–í —Ñ–∞–π–ª–µ `src/submit/model_inference.py`:

```python
from .rag.vector_rag_engine import VectorRAGEngine, VectorRAGConfig

class SubmitModelWithMemory(ModelWithMemory):
    def __init__(self, model_path: str) -> None:
        self.storage = MemoryStorage()
        self.model_inference = ModelInference(model_path)
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–µ–∫—Ç–æ—Ä–Ω—ã–π RAG –≤–º–µ—Å—Ç–æ –æ–±—ã—á–Ω–æ–≥–æ
        config = VectorRAGConfig(
            embedding_model="cointegrated/rubert-tiny2",
            embedding_device="cuda",  # –∏–ª–∏ "cpu"
            vector_search_top_k=5,
            use_hybrid_search=True
        )
        self.rag_interface = VectorRAGEngine(config)
```

### –í–∞—Ä–∏–∞–Ω—Ç 2: –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

```python
class SubmitModelWithMemory(ModelWithMemory):
    def __init__(self, model_path: str, use_vector_search: bool = True):
        self.storage = MemoryStorage()
        self.model_inference = ModelInference(model_path)
        
        if use_vector_search:
            from .rag.vector_rag_engine import VectorRAGEngine, VectorRAGConfig
            config = VectorRAGConfig()
            self.rag_interface = VectorRAGEngine(config)
        else:
            self.rag_interface = RAGInterface()
```

## üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

### –ë–∞–∑–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä:
```python
from submit.embeddings.embedding_engine import EmbeddingEngine
from submit.embeddings.vector_store import VectorStore
from submit.rag.vector_rag_engine import VectorRAGEngine

# 1. –°–æ–∑–¥–∞–µ–º –¥–≤–∏–∂–æ–∫
engine = VectorRAGEngine()

# 2. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
dialogue_id = "user_123"
messages = [...]  # –í–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤–æ–ø—Ä–æ—Å–µ
prompt, metadata = engine.process_question(
    "–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?", 
    dialogue_id, 
    messages
)

print(f"–ù–∞–π–¥–µ–Ω–æ —á–µ—Ä–µ–∑ –≤–µ–∫—Ç–æ—Ä–Ω—ã–π –ø–æ–∏—Å–∫: {metadata['vector_search_results']} —Å–µ—Å—Å–∏–π")
```

### –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
```python
# –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è –≤—Å–µ—Ö –¥–∏–∞–ª–æ–≥–æ–≤
for dialogue in all_dialogues:
    sessions = group_by_sessions(dialogue.messages)
    stats = engine.index_dialogue(dialogue.id, sessions)
    print(f"–ü—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–æ: {stats}")

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤
engine.save_indices("./vector_indices")

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—É—Å–∫–µ
engine.load_indices("./vector_indices")

# –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –ø–æ–∏—Å–∫–∞
analysis = engine.get_vector_search_analysis(question, dialogue_id)
print(f"–¢–æ–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã: {analysis['top_5_results']}")
```

## ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞

### –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è VectorRAGConfig:
```python
config = VectorRAGConfig(
    # –ú–æ–¥–µ–ª—å —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤
    embedding_model="cointegrated/rubert-tiny2",  # –ú–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –¥—Ä—É–≥—É—é
    embedding_device="cuda",  # "cuda" –∏–ª–∏ "cpu"
    embedding_batch_size=32,  # –†–∞–∑–º–µ—Ä –±–∞—Ç—á–∞ –¥–ª—è –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è
    
    # –í–µ–∫—Ç–æ—Ä–Ω—ã–π –ø–æ–∏—Å–∫
    vector_search_metric="cosine",  # "cosine", "euclidean", "dot"
    vector_search_top_k=5,  # –°–∫–æ–ª—å–∫–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å
    vector_search_threshold=0.7,  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ä–æ–≥ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏
    
    # –ì–∏–±—Ä–∏–¥–Ω—ã–π –ø–æ–∏—Å–∫
    use_hybrid_search=True,  # –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å —Å keyword search
    keyword_weight=0.3,  # –í–µ—Å keyword search
    vector_weight=0.7,  # –í–µ—Å –≤–µ–∫—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
)
```

### –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–æ–¥–µ–ª–∏ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤:
```python
# –î–ª—è —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞:
"cointegrated/rubert-tiny2"  # 312 MB, –±—ã—Å—Ç—Ä–∞—è
"cointegrated/LaBSE-en-ru"  # 490 MB, –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è
"ai-forever/sbert_large_nlu_ru"  # 1.7 GB, —Å–∞–º–∞—è —Ç–æ—á–Ω–∞—è

# –ú—É–ª—å—Ç–∏—è–∑—ã—á–Ω—ã–µ:
"sentence-transformers/paraphrase-multilingual-mpnet-base-v2"
"intfloat/multilingual-e5-base"
```

## üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:
```bash
python test_vector_search.py
```

–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
```
üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ–∫—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –¥–ª—è GigaMemory
===========================================================
=== –¢–µ—Å—Ç EmbeddingEngine ===
–ö–æ–¥–∏—Ä—É–µ–º 6 —Ç–µ–∫—Å—Ç–æ–≤...
–†–∞–∑–º–µ—Ä —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤: (6, 312)

–ü–æ–∏—Å–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É: '–ö–∞–∫ –∑–æ–≤—É—Ç –º–æ—é –∫–æ—à–∫—É?'
  0.245 - –ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–ª–µ–∫—Å–∞–Ω–¥—Ä, –º–Ω–µ 30 –ª–µ—Ç
  0.198 - –Ø —Ä–∞–±–æ—Ç–∞—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–º –≤ IT –∫–æ–º–ø–∞–Ω–∏–∏
  0.456 - –£ –º–µ–Ω—è –µ—Å—Ç—å –∫–æ—à–∫–∞ –ø–æ –∏–º–µ–Ω–∏ –ú—É—Ä–∫–∞  ‚Üê –õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!
  ...

‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!
```

## üìà –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –≤–µ–∫—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞

1. **–°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ** - –Ω–∞—Ö–æ–¥–∏—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–∞–∂–µ –ø—Ä–∏ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∞—Ö
2. **–°–∫–æ—Ä–æ—Å—Ç—å** - O(log n) –≤–º–µ—Å—Ç–æ O(n) –¥–ª—è keyword search
3. **–ö–∞—á–µ—Å—Ç–≤–æ** - –ª—É—á—à–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Å–∏–Ω–æ–Ω–∏–º–∞–º–∏ –∏ –ø–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä–æ–≤–∫–∞–º–∏
4. **–ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å** - —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ç—ã—Å—è—á–∞–º–∏ —Å–µ—Å—Å–∏–π

## üêõ –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ —Ä–µ—à–µ–Ω–∏—è

### –ü—Ä–æ–±–ª–µ–º–∞: Out of Memory –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤
**–†–µ—à–µ–Ω–∏–µ**: –£–º–µ–Ω—å—à–∏—Ç–µ `embedding_batch_size` –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏

### –ü—Ä–æ–±–ª–µ–º–∞: –ú–µ–¥–ª–µ–Ω–Ω–∞—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è
**–†–µ—à–µ–Ω–∏–µ**: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ GPU (`embedding_device="cuda"`)

### –ü—Ä–æ–±–ª–µ–º–∞: –ù–∏–∑–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –ø–æ–∏—Å–∫–∞
**–†–µ—à–µ–Ω–∏–µ**: –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é –º–æ–¥–µ–ª—å —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤ –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ—Ä–æ–≥–∏

## üöÄ –î–∞–ª—å–Ω–µ–π—à–∏–µ —É–ª—É—á—à–µ–Ω–∏—è

1. **–î–æ–±–∞–≤–∏—Ç—å FAISS** –¥–ª—è –±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–º–æ–≤ (>100k –≤–µ–∫—Ç–æ—Ä–æ–≤)
2. **–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫—É—é –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—é** (—Å–µ—Å—Å–∏–∏ ‚Üí —Ñ–∞–∫—Ç—ã ‚Üí –¥–µ—Ç–∞–ª–∏)
3. **–î–æ–±–∞–≤–∏—Ç—å fine-tuning** –º–æ–¥–µ–ª–∏ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤ –Ω–∞ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö
4. **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å cross-encoders** –¥–ª—è –ø–µ—Ä–µ—Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

## üìä –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

–ù–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö (4 –¥–∏–∞–ª–æ–≥–∞, 20 —Å–µ—Å—Å–∏–π):
- –í—Ä–µ–º—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏: ~1 —Å–µ–∫
- –í—Ä–µ–º—è –ø–æ–∏—Å–∫–∞: ~10 –º—Å
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: ~50 MB
- –ö–∞—á–µ—Å—Ç–≤–æ –ø–æ–∏—Å–∫–∞: 85% —Ç–æ—á–Ω–æ—Å—Ç—å –Ω–∞ —Ç–æ–ø-3

## ‚úÖ Checklist –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏

- [ ] –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª—ã –≤ –ø—Ä–æ–µ–∫—Ç
- [ ] –û–±–Ω–æ–≤–∏—Ç—å –∏–º–ø–æ—Ä—Ç—ã –≤ `model_inference.py`
- [ ] –í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤
- [ ] –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
- [ ] –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
- [ ] –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
- [ ] –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ—Ä–æ–≥–∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏
- [ ] –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤

---

**–ì–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!** üéâ

–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∫–æ–¥—É —Ç–µ—Å—Ç–æ–≤ –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏.



