#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑ src/submit
–í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Ç–æ–ª—å–∫–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ, –Ω–æ –ù–ï —É–¥–∞–ª—è–µ—Ç —Ñ–∞–π–ª—ã!
"""
import os
from pathlib import Path

def analyze_obsolete_files():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ —Ñ–∞–π–ª—ã –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å"""
    
    submit_dir = Path("src/submit")
    
    # –§–∞–π–ª—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (–±–µ–∑–æ–ø–∞—Å–Ω–æ)
    obsolete_files = [
        # –£—Å—Ç–∞—Ä–µ–≤—à–∏–µ –≤–µ—Ä—Å–∏–∏ model_inference
        "model_inference_original.py",
        "model_inference_v2.py", 
        "model_inference_vector.py",
        
        # –£—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã RAG
        "rag/vector_rag_engine.py",
        "rag/vector_rag_interface.py",
        
        # –£—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã embeddings
        "embeddings/embedding_engine.py",
        "embeddings/vector_store.py", 
        "embeddings/vector_models.py",
        "embeddings/vector_utils.py",
        "embeddings/test_vector_search.py",
        
        # –ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        "questions/classifier.py",
        "questions/confidence.py",
        "questions/topics.py",
        "ranking/scorer.py",
        "ranking/session_ranker.py",
        "prompts/fallback_prompts.py",
        "prompts/topic_prompts.py",
        
        # –£—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        "config_loader.py",
        "config.yaml",
        
        # –ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã core
        "core/data_loader.py",
        "core/message_filter.py",
    ]
    
    # –ü–∞–ø–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (–µ—Å–ª–∏ –ø—É—Å—Ç—ã–µ)
    obsolete_dirs = [
        "questions",
        "ranking", 
        "prompts"
    ]
    
    print("üîç –ê–ù–ê–õ–ò–ó –£–°–¢–ê–†–ï–í–®–ò–• –§–ê–ô–õ–û–í –í src/submit")
    print("=" * 60)
    
    total_size = 0
    files_to_delete = []
    
    print("\nüìã –§–ê–ô–õ–´ –î–õ–Ø –£–î–ê–õ–ï–ù–ò–Ø:")
    print("-" * 40)
    
    for file_path in obsolete_files:
        full_path = submit_dir / file_path
        
        if full_path.exists():
            size = full_path.stat().st_size
            total_size += size
            files_to_delete.append((file_path, size))
            print(f"‚úÖ {file_path} ({size:,} –±–∞–π—Ç)")
        else:
            print(f"‚ùå {file_path} (–Ω–µ –Ω–∞–π–¥–µ–Ω)")
    
    print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"–§–∞–π–ª–æ–≤ –∫ —É–¥–∞–ª–µ–Ω–∏—é: {len(files_to_delete)}")
    print(f"–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {total_size:,} –±–∞–π—Ç ({total_size/1024:.1f} KB)")
    
    print(f"\nüìÅ –ü–ê–ü–ö–ò –î–õ–Ø –ü–†–û–í–ï–†–ö–ò:")
    print("-" * 40)
    
    for dir_name in obsolete_dirs:
        dir_path = submit_dir / dir_name
        if dir_path.exists():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ–∞–π–ª—ã –∫—Ä–æ–º–µ __init__.py –∏ __pycache__
            files_in_dir = []
            for item in dir_path.iterdir():
                if item.is_file() and not item.name.startswith('__'):
                    files_in_dir.append(item.name)
            
            if files_in_dir:
                print(f"‚ö†Ô∏è  {dir_name}/ - —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ–∞–π–ª—ã: {files_in_dir}")
            else:
                print(f"‚úÖ {dir_name}/ - –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å (—Ç–æ–ª—å–∫–æ —Å–ª—É–∂–µ–±–Ω—ã–µ —Ñ–∞–π–ª—ã)")
        else:
            print(f"‚ùå {dir_name}/ - –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    print(f"\n‚úÖ –ê–ö–¢–ò–í–ù–´–ï –§–ê–ô–õ–´ (–ù–ï –£–î–ê–õ–Ø–¢–¨):")
    print("-" * 40)
    
    active_files = [
        "model_inference_optimized.py",
        "smart_memory.py", 
        "smart_memory_optimized.py",
        "llm_inference.py",
        "storage/",
        "compression/",
        "extraction/",
        "filters/",
        "optimization/",
        "embeddings/improved_vector_search.py",
        "embeddings/improved_vector_store.py",
        "rag/compressed_rag_engine.py",
        "rag/config.py",
        "rag/engine.py", 
        "rag/interface.py"
    ]
    
    for file_path in active_files:
        full_path = submit_dir / file_path
        if full_path.exists():
            print(f"‚úÖ {file_path} - –ê–ö–¢–ò–í–ï–ù")
        else:
            print(f"‚ùå {file_path} - –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print(f"\nüöÄ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("-" * 40)
    print("1. –°–æ–∑–¥–∞–π—Ç–µ –±—ç–∫–∞–ø: cp -r src/submit src/submit_backup")
    print("2. –£–¥–∞–ª–∏—Ç–µ —Ñ–∞–π–ª—ã –ø–æ—ç—Ç–∞–ø–Ω–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
    print("3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Å–∏—Å—Ç–µ–º—É –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —ç—Ç–∞–ø–∞")
    print("4. –û–±–Ω–æ–≤–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é")
    
    print(f"\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï:")
    print("-" * 40)
    print("–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Ç–æ–ª—å–∫–æ –ê–ù–ê–õ–ò–ó–ò–†–£–ï–¢ —Ñ–∞–π–ª—ã!")
    print("–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –≤—Ä—É—á–Ω—É—é –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç.")
    print("–í—Å–µ–≥–¥–∞ —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –±—ç–∫–∞–ø –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º!")
    
    return files_to_delete, total_size

def generate_cleanup_commands():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (–¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è)"""
    
    commands = [
        "# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö —Ñ–∞–π–ª–æ–≤",
        "# –í–ù–ò–ú–ê–ù–ò–ï: –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –±—ç–∫–∞–ø!",
        "",
        "# 1. –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞",
        "cp -r src/submit src/submit_backup",
        "",
        "# 2. –£–¥–∞–ª–µ–Ω–∏–µ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –≤–µ—Ä—Å–∏–π model_inference",
        "rm src/submit/model_inference_original.py",
        "rm src/submit/model_inference_v2.py", 
        "rm src/submit/model_inference_vector.py",
        "",
        "# 3. –£–¥–∞–ª–µ–Ω–∏–µ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ RAG",
        "rm src/submit/rag/vector_rag_engine.py",
        "rm src/submit/rag/vector_rag_interface.py",
        "",
        "# 4. –£–¥–∞–ª–µ–Ω–∏–µ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ embeddings",
        "rm src/submit/embeddings/embedding_engine.py",
        "rm src/submit/embeddings/vector_store.py",
        "rm src/submit/embeddings/vector_models.py", 
        "rm src/submit/embeddings/vector_utils.py",
        "rm src/submit/embeddings/test_vector_search.py",
        "",
        "# 5. –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤",
        "rm src/submit/questions/classifier.py",
        "rm src/submit/questions/confidence.py",
        "rm src/submit/questions/topics.py",
        "rm src/submit/ranking/scorer.py",
        "rm src/submit/ranking/session_ranker.py",
        "rm src/submit/prompts/fallback_prompts.py",
        "rm src/submit/prompts/topic_prompts.py",
        "",
        "# 6. –£–¥–∞–ª–µ–Ω–∏–µ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π",
        "rm src/submit/config_loader.py",
        "rm src/submit/config.yaml",
        "",
        "# 7. –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ core",
        "rm src/submit/core/data_loader.py",
        "rm src/submit/core/message_filter.py",
        "",
        "# 8. –£–¥–∞–ª–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö –ø–∞–ø–æ–∫ (–µ—Å–ª–∏ –æ–Ω–∏ –ø—É—Å—Ç—ã–µ)",
        "rmdir src/submit/questions 2>/dev/null || true",
        "rmdir src/submit/ranking 2>/dev/null || true", 
        "rmdir src/submit/prompts 2>/dev/null || true",
        "",
        "# 9. –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ Python",
        "find src/submit -name '__pycache__' -type d -exec rm -rf {} + 2>/dev/null || true",
        "find src/submit -name '*.pyc' -delete 2>/dev/null || true",
        "",
        "echo '–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏—Å—Ç–µ–º—É.'"
    ]
    
    return commands

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üßπ –ê–ù–ê–õ–ò–ó –£–°–¢–ê–†–ï–í–®–ò–• –§–ê–ô–õ–û–í")
    print("=" * 60)
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
    files_to_delete, total_size = analyze_obsolete_files()
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
    commands = generate_cleanup_commands()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—ã –≤ —Ñ–∞–π–ª
    with open("cleanup_commands.sh", "w") as f:
        f.write("\n".join(commands))
    
    print(f"\nüíæ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: cleanup_commands.sh")
    print(f"üìã –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: chmod +x cleanup_commands.sh && ./cleanup_commands.sh")
    
    print(f"\nüéØ –ò–¢–û–ì:")
    print(f"–ú–æ–∂–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ —É–¥–∞–ª–∏—Ç—å {len(files_to_delete)} —Ñ–∞–π–ª–æ–≤")
    print(f"–≠–∫–æ–Ω–æ–º–∏—è –º–µ—Å—Ç–∞: {total_size:,} –±–∞–π—Ç ({total_size/1024:.1f} KB)")
    print(f"–°–∏—Å—Ç–µ–º–∞ —Å—Ç–∞–Ω–µ—Ç —á–∏—â–µ –∏ –ø—Ä–æ—â–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫–µ!")

if __name__ == "__main__":
    main()
